---
import { coraLleno, coraVacio } from "@/components/images/images";
import AddReviewModal from "@/components/modals/review/AddReviewModal.astro";
import { getFavoritesByUserId } from "@/repository/favourites";
import { getRestaurantById } from "@/repository/restaurants";
import { getReviewCountsByRestaurant } from "@/repository/reviews";

const { restaurant, user, reviews } = Astro.props;

//
const favorites = await getFavoritesByUserId(user.id);

//
const reviewCountsByRestaurant = await getReviewCountsByRestaurant();
---
<!-- INICIO DEL COMPONENTE DE LA TARJETA -->
<div class="bg-white shadow-lg overflow-hidden py-8 antialiased md:py-8 max-w-screen-xl mx-auto rounded-xl px-4 sm:px-6 lg:px-8">
    <!-- Imagen Principal -->
    <div>
        <img src={restaurant.photo} alt={restaurant.name} class="w-full h-72 object-cover">
    </div>

    <!-- Información y Enlaces -->
    <div class="p-6">
        <div class="flex justify-between items-start md:items-center flex-wrap">
            <!-- Nombre y Dirección -->
            <div class="flex-grow mb-4 md:mb-0">
                <div class="flex items-center mb-1">
                    <h1 class="text-3xl font-bold text-slate-800">{restaurant.name}</h1>
                    <button aria-label="Añadir a favoritos"
            class="transition transform duration-200 hover:scale-110 ml-3 text-slate-400 hover:text-pink-500"
            data-fav
            data-user-id={user.id}
            data-restaurant-id={restaurant.id}
            data-cora-lleno={coraLleno}
            data-cora-vacio={coraVacio}>
            <span set:html={favorites.includes(restaurant.id) ? coraLleno : coraVacio}></span>
          </button>
                </div>
                <p class="text-sm text-slate-600">{restaurant.address}</p>
            </div>

            <!-- Enlaces -->
            <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3 w-full sm:w-auto">
                <a href={restaurant.website} class="flex-1 sm:flex-none px-5 py-2 border border-slate-300 rounded-full text-sm text-slate-700 hover:bg-slate-100 transition-colors text-center whitespace-nowrap">
                    Website
                </a>
                <a href={restaurant.maps_url} class="flex-1 sm:flex-none px-5 py-2 border border-slate-300 rounded-full text-sm text-slate-700 hover:bg-slate-100 transition-colors text-center whitespace-nowrap">
                    Map Place
                </a>
            </div>
        </div>
    </div>

    <!-- Sección de Reseñas -->
    <div class="px-6 pt-4 pb-2">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-semibold text-slate-800">Reviews ({reviewCountsByRestaurant[restaurant.id] ?? 0})</h2>
            <button
            data-modal-target="addReviewModal"
            data-modal-toggle="addReviewModal"
            type="button"
            class="text-sm text-sky-600 hover:text-sky-700 hover:underline whitespace-nowrap"
            >
            Add Review
            </button>

            
        </div>
    </div>

    <!-- Lista de Cards de Reseñas -->
    <!-- Lista de Cards de Reseñas -->
<div class="px-6 pb-6 space-y-4">
    {reviews.length === 0 && (
      <p class="text-slate-500 text-sm">Todavía no hay reseñas para este restaurante.</p>
    )}
  
    {reviews.map((review: ReviewWithUser) => (
      <div class="bg-amber-50 p-4 rounded-lg shadow-sm">
        <div class="flex items-center mb-2">
          <h3 class="font-semibold text-slate-800">{review.userName} {review.userSurname}</h3>
          {review.digestiveCondition && (
            <span class="ml-3 px-2 py-0.5 bg-green-100 text-green-700 text-xs font-medium rounded-full">
              {review.digestiveCondition}
            </span>
          )}
        </div>
        <p class="text-sm text-slate-900 mb-2 leading-relaxed">
          {review.title}
        </p>
        <p class="text-sm text-slate-700 mb-2 leading-relaxed">
          {review.description}
        </p>
        <p class="text-sm font-medium text-slate-600">Menú adecuado: {review.suitable ? "Sí" : "No"}</p>
      </div>
    ))}
  </div>
</div>
<!-- FIN DEL COMPONENTE DE LA TARJETA -->
<AddReviewModal user={user} restaurant = {restaurant} />

<script type="module">
  document.addEventListener("click", async (e) => {
    const button = e.target.closest("button[data-fav]");
    if (!button) return;

    const restaurantId = button.dataset.restaurantId;
    const userId = button.dataset.userId;
    const coraLleno = button.dataset.coraLleno;
    const coraVacio = button.dataset.coraVacio;
    const heartSpan = button.querySelector("span");

    const form = new FormData();
    form.append("userId", userId);
    form.append("restaurantId", restaurantId);

    try {
      const res = await fetch("/api/favorites/toggle", {
        method: "POST",
        body: form,
      });

      const result = await res.json();
      heartSpan.innerHTML = result.added ? coraLleno : coraVacio;
    } catch (err) {
      console.error("Error al actualizar favorito:", err);
    }
  });
</script>