---
import RestaurantInfo from "@/components/user/restaurant/restaurantInfo.astro";
import LayoutUser from "@/layouts/LayoutUser.astro";
import { getRestaurantById, getReviewsByRestaurant } from "@/repository/restaurants";
import { insertReview } from "@/repository/reviews";
import { getUserFromSession } from "@/repository/users";
import { createReview } from "@/services/createReview";

if (Astro.locals.user === null) {
  return Astro.redirect('/login'); // Redirigir a login si no hay usuario autenticado
}

const cookies = Astro.cookies;
const sessionId = cookies.get("session")?.value;

let user = null;
if (sessionId) {
  user = await getUserFromSession(sessionId);
}



const method = Astro.request.method;
const { params } = Astro;
const id = Number(params.id);
console.log(`ðŸš© ${method} /user/restaurant/${params.id}  â†’  id =`, id);

const restaurant = await getRestaurantById(id);
console.log("ðŸš© restaurant fetched:", restaurant);
const reviews = await getReviewsByRestaurant(id);

if (!restaurant) {
  throw new Error("Restaurante no encontrado");
}

if (Number.isNaN(id)) {
  //  â†’ aquÃ­ puedes redirigir o lanzar un 404 amigable
  return Astro.redirect('/404');
}

// ðŸš¨ SI ES POST, INSERTAR LA REVIEW
if (Astro.request.method === "POST") {
  let data = await Astro.request.formData();
  if (Number.isNaN(id)) {
  throw new Error(`ParÃ¡metro de ruta invÃ¡lido: params.id = ${params.id}`);
}
  const review:IReview = await createReview(data);

  await insertReview(review);

  return Astro.redirect(`/user/restaurant/${restaurant.id}`);
}
---
<LayoutUser user={user}>
    <RestaurantInfo restaurant={restaurant} user={user} reviews={reviews} />
</LayoutUser>
